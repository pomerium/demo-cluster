---
- name: Configure sudo group for passwordless sudo and reconnect
  hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: Configure current user for passwordless sudo
      become: true
      copy:
        dest: /etc/sudoers.d/{{ ansible_user }}_passwordless_sudo
        content: |
          {{ ansible_user }} ALL=(ALL) NOPASSWD:ALL
        owner: root
        group: root
        mode: '0440'

    - name: Notify user to reconnect with new sudo permissions
      debug:
        msg: "Passwordless sudo has been configured for the user {{ ansible_user }}. Reconnecting to apply changes..."

    - name: Force reconnection
      meta: reset_connection

- name: Continue playbook after reconnection
  hosts: all
  gather_facts: yes
  tasks:
    - name: Verify passwordless sudo configuration
      command: sudo -n true
      register: sudo_check
      failed_when: sudo_check.rc != 0
      changed_when: false

    - name: Display confirmation of passwordless sudo setup
      debug:
        msg: "Passwordless sudo is successfully configured for the user {{ ansible_user }}."

- name: Install and configure K3s
  hosts: all
  gather_facts: true
  vars:
    # k3s_state: uninstalled
    k3s_registration_address: "192.168.68.100"
    k3s_become: true
    k3s_version: "v1.31.3+k3s1"
  roles:
    - role: xanmanning.k3s

- name: Configure kubeconfig for control node
  hosts: all
  gather_facts: true
  tasks:
    - name: Select control node
      when: k3s_control_node | default(false)
      block:
        - name: Copy kubeconfig from control node to localhost
          become: true
          fetch:
            src: /etc/rancher/k3s/k3s.yaml
            dest: /tmp/kubeconfig_{{ inventory_hostname }}
            flat: yes

        - name: Update kubeconfig with control node's IP
          delegate_to: localhost
          lineinfile:
            path: /tmp/kubeconfig_{{ inventory_hostname }}
            create: yes
            regexp: 'server: https://127.0.0.1:6443'
            line: '    server: https://{{ inventory_hostname }}:6443' # Force correct indentation
            backup: yes

        - name: Move kubeconfig to ~/.kube/config_{{ inventory_hostname }}
          delegate_to: localhost
          copy:
            src: /tmp/kubeconfig_{{ inventory_hostname }}
            dest: ~/.kube/config_{{ inventory_hostname }}
            remote_src: yes
